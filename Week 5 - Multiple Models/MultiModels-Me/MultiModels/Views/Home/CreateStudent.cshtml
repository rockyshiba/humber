@model MultiModels.Models.Student

@{
    ViewBag.Title = "CreateStudent";
}

<h2>CreateStudent</h2>

<form method="post">
    <label for="f_name">First name: </label>
    <input type="text" name="f_name" id="f_name" />
    <br />
    <label for="l_name">Last name: </label>
    <input type="text" name="l_name" id="l_name" />
    <br />
    <label for="Student_num">Student number: </label>
    <input type="text" name="Student_num" id="Student_num" />
    <br />
    <label for="Program_Id">Program</label>
    <select name="Program_Id" id="Program_Id">
        <option value="1">Web Development</option>
        <option value="5">Paralegal</option>
    </select>
</form>

<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    @Html.LabelFor(model => model.f_name)
    @Html.EditorFor(model => model.f_name)
    <br />
    @Html.LabelFor(model => model.l_name)
    @Html.EditorFor(model => model.l_name)
    <br />
    @Html.LabelFor(model => model.Student_num)
    @Html.EditorFor(model => model.Student_num)
    <br />
    @Html.LabelFor(model => model.Program_Id)
    @Html.EditorFor(model => model.Program_Id)
    <input type="submit" value="Create" />
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Student_num, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student_num, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student_num, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.f_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.f_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.f_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.l_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.l_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.l_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Program_Id, "Program_Id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Program_Id", new List<SelectListItem> {
                    new SelectListItem { Value = "1", Text = "Web Development" },
                    new SelectListItem { Value = "5",  Text="Paralegal" }
                    }, 
                    htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Program_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
